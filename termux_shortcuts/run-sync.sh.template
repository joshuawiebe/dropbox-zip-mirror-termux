#!/data/data/com.termux/files/usr/bin/bash
set -euo pipefail

# === Dropbox Mirror Sync Wrapper ===
# Minimal wrapper: detects Python and runs sync_dropbox.py
# Logs and progress bars handled entirely in Python.

# --- Detect repo root automatically ---
SCRIPT_PATH="$(realpath "$0")"
SCRIPT_DIR="$(dirname "$SCRIPT_PATH")"

if [ -d "$SCRIPT_DIR/.git" ]; then
    REPO_ROOT="$SCRIPT_DIR"
elif [ -d "$SCRIPT_DIR/../.git" ]; then
    REPO_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
elif [ -d "$HOME/dropbox-zip-mirror-termux/.git" ]; then
    REPO_ROOT="$HOME/dropbox-zip-mirror-termux"
else
    echo "‚ùå ERROR: Could not detect repository root."
    exit 1
fi

# --- Determine Python interpreter ---
if [ -n "${VENV_DIR:-}" ] && [ -x "$VENV_DIR/bin/python" ]; then
    PYTHON="$VENV_DIR/bin/python"
elif [ -x "$REPO_ROOT/.venv/bin/python" ]; then
    PYTHON="$REPO_ROOT/.venv/bin/python"
elif [ -x "$REPO_ROOT/venv/bin/python" ]; then
    PYTHON="$REPO_ROOT/venv/bin/python"
elif command -v python3 >/dev/null 2>&1; then
    PYTHON="$(command -v python3)"
elif command -v python >/dev/null 2>&1; then
    PYTHON="$(command -v python)"
else
    echo "‚ùå ERROR: No Python interpreter found!"
    exit 1
fi

# --- Termux Job Scheduler support ---
if [ -n "${TERMUX_JOB_UUID:-}" ]; then
    echo "üîπ Running as scheduled job (UUID: $TERMUX_JOB_UUID)"
fi

echo "=== Dropbox Mirror Sync ==="
date

# --- Execute Python script ---
"$PYTHON" "$REPO_ROOT/sync_dropbox.py"

echo "=== Done ==="
