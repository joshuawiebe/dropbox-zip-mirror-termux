#!/usr/bin/env bash
# Termux widget script for Dropbox Mirror
# Generated from template by setup_termux.sh

VENV="__VENV_DIR__"
PY="$VENV/bin/python"
SCRIPT="__SCRIPT_PATH__"
LOG="__LOG_PATH__"
REPO_DIR="$(dirname "$SCRIPT")"

# Set environment for widget context
export TERMUX_WIDGET=1

# Change to repo directory
cd "$REPO_DIR" || {
    echo "$(date): ERROR: Could not change to repo directory: $REPO_DIR" >> "$LOG"
    exit 1
}

# Check if venv exists
if [ ! -f "$PY" ]; then
    echo "$(date): ERROR: Python venv not found at $PY" >> "$LOG"
    echo "$(date): Run setup_termux.sh to recreate the environment" >> "$LOG"
    exit 1
fi

# Check if script exists  
if [ ! -f "$SCRIPT" ]; then
    echo "$(date): ERROR: sync_dropbox.py not found at $SCRIPT" >> "$LOG"
    exit 1
fi

# Run the sync script
echo "$(date): Widget triggered sync" >> "$LOG"
"$PY" "$SCRIPT" >> "$LOG" 2>&1
EXIT_CODE=$?

# Log completion
if [ $EXIT_CODE -eq 0 ]; then
    echo "$(date): Sync completed successfully" >> "$LOG"
else
    echo "$(date): Sync failed with exit code $EXIT_CODE" >> "$LOG"
fi

# Send notification if termux-notification is available
if command -v termux-notification >/dev/null 2>&1; then
    if [ $EXIT_CODE -eq 0 ]; then
        termux-notification --title "Dropbox Mirror" --content "Sync completed successfully" --priority high
    else
        termux-notification --title "Dropbox Mirror" --content "Sync failed - check log" --priority high
    fi
fi

exit $EXIT_CODE